/**
 * 积分商城首页入口
 */


;~function () {
    var app = function () {
        this.coinNumber = $('[data-selector="coin-number"]');
        this.advBanner = $('[data-selector="adv-banner"]');
        this.listsGroup = $('[data-selector="lists-group"]');
        this.$loadMore = $('._load-more');
        this.page = 1;
        this.size = 10;
        this.scroll = $.scroll();
    };
    app.prototype.init = function () {
        this.listenerLogin(); //监听登陆
        this.getUserCoin();   //获得用户积分
        this.getCoinAdv();  //获取页面数据
        this.main();
    };
    /**
     * todo : 获得用积分并显示
     * desc : 获得用户信息并显示，当发生登陆或者登出时候重新执行当前函数，以刷新数据
     * tips : 这是一个支线程序,报错讲不影响主线的使用
     */
    app.prototype.getUserCoin = function () {
        var self = this;
        //检测未登录
        if( typeof localStorage.login === typeof void 0) return false;
        //检测登陆
        async.waterfall([
            function (cb) {
                $.ajax({url:'member/info/point'}).then( cb );
            }
        ],function (err,ret) {
            if(err) return false;
            self.coinNumber.text( Math.floor( ret.data ) );
        });
    };
    /**
     * todo : 获取积分商城广告并显示
     * desc : 获取积分商城广告并显示
     * tips : 支线程序，报错讲不影响主线的使用
     */
    app.prototype.getCoinAdv = function () {
        var self = this;
        async.waterfall([
            function ( cb ) {
                // 获取广告，暂时先用首页广告
                $.ajax({
                    url : 'ads/index/index' ,
                    data : {
                        area : 0 ,
                        position : 1
                    }
                }).then( cb );
            },
            function ( ret , cb ) {
                // 填写广告到html至页面
                self.advHtml(ret , cb)
            }
        ],function (err , ret) {
            self.swipe();
            if(err) return $.api.toast(err);
        });
    };

    /**
     * todo : 添加广告内容
     * desc : 添加广告html
     * @param ret 从接口获得的数据
     * @param callback 执行完成后的回调函数
     */
    app.prototype.advHtml = function (ret , callback) {
        callback = typeof callback == 'function' ? callback : function () {};
        var db = ret.data.info,
            html = '',
            self = this;
        html += '<div class="banner-wrap js-slider swipe"><div class="banner-group swipe-wrap">';
        db.forEach(function (item) {
            if(!item || typeof item == typeof void 0) return false;
            html += '<div class="banner-item" style="background-image: url(\'';
            html += item.thumb;
            html += '\')"></div>';
        });
        html += '</div></div>';
        self.advBanner.html(html);
        callback();
    };
    /**
     * todo : 积分商城轮播图初始化
     * desc : 启动轮播
     * @param callback 启动成功的回调函数
     * @returns {*}
     */
    app.prototype.swipe = function () {
        var banner  = new Swipe( $('.js-slider')[0] , {
            startSlide: 0,
            speed: 400,
            auto: 3000,
            continuous: true,
            disableScroll: false,
            stopPropagation: false,
            /*compatWithPullToRefresh : true,
            frameName : api.frameName,*/
            callback: function(index,el) {
                var all = $(el).siblings().length + 1;
                if(!index) index = all;
                $('.js-banner-bar').width( index * ( 100 / all ) + '%');
            }
        });
        return banner;
    };
    /**
     * todo : 监听用户登陆成功，
     * desc : 监听用户登陆成功, 重新获得用户的数据，比如当前用户积分总量
     */
    app.prototype.listenerLogin = function () {
        var self = this;
        $.logEvent().listenerLogin().then(function () {
            self.getUserCoin();
        });
    };
    /**
     * todo : 主线进程
     * desc : 获得积分商城列表
     */
    app.prototype.main = function () {
        var self = this;
        //取消监听滚动到底部
        self.scroll.removeListenerToBottom();
        async.waterfall([
            function (callback) {
                $.ajax({
                    url : 'mall/point/list',
                    data : {
                        page : self.page ,
                        size : self.size
                    },
                    cache : false,
                }).then( callback )
            },
            function ( ret , cb ) {
                self.appendHtml(ret , cb);
            },
            function (ret , cb) {
                self.iScroll( ret , cb);
            }
        ],function ( err ) {
            $.app.oval();
            $.echo();
            self.swipe();
            if(err) return $.api.toast(err);
            self.page += 1;
        });
    };
    /**
     * 是否需要监听到底部
     * @param ret
     * @param callback
     * @returns {*}
     */
    app.prototype.iScroll = function (ret , callback) {
        var self = this;
        callback = $.callback(callback);
        if( !ret.data.info || ret.data.info.length < self.size ) {
            self.$loadMore.text('后面没有了')
            return callback();
        };
        self.$loadMore.text('努力加载中');
        self.scroll.addListenerToBottom(function () {
            self.main();
        });
        callback();
    };
    /**
     * todo : 单个商品的html
     * @param ret
     * @returns {string}
     */
    app.prototype.listsHtml = function (ret) {
        var html = '',
            db = ( !!ret.data.info || typeof  ret.data.info === typeof void 0 ) ? ret.data.info :  [];
        db.forEach(function (item) {
            html += '<div class="lists-item hot" data-event="openNewWin" data-params=\'{"name":"win_coin_details","param":{"id":"';
            html += item.id;
            html += '"}}\'><div class="lists-img"><img src="../images/shop-item.jpg" data-echo="';
            html += item.thumb;
            html += '" /></div><div class="desc"><p>';
            html += item.title;
            html += '</p><div class="pink"><i class="icon-score"></i><span>';
            html += item.offer_point;
            html += '积分</span></div></div><div class="tips">热门</div></div>';
        });
        return html;
    };
    app.prototype.appendHtml = function ( ret , callback) {
        var self = this;
        self.page == 1 ? self.listsGroup.html( self.listsHtml(ret) ) : self.listsGroup.append( self.listsHtml(ret) );
        callback(null,ret);
    };
    $.coinIndex = function () {
        return new app();
    };
}();